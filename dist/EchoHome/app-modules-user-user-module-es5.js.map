{"version":3,"sources":["webpack:///src/app/components/user/address-management/address-management.component.ts","webpack:///src/app/components/user/address-management/address-management.component.html","webpack:///src/app/components/user/order-history/order-history.component.ts","webpack:///src/app/components/user/order-history/order-history.component.html","webpack:///src/app/components/user/user-profile/user-profile.component.ts","webpack:///src/app/components/user/user-profile/user-profile.component.html","webpack:///src/app/modules/user-routing/user-routing.module.ts","webpack:///src/app/modules/user/user.module.ts"],"names":["AddressManagementComponent","addressService","formBuilder","addresses","errMess","getAllAddresses","subscribe","res","err","createAddressForm","addressModal","hide","show","addressForm","group","street","required","city","country","valid","createNewAddress","value","console","log","openAddressModal","closeAddressModal","addAddress","selector","templateUrl","styleUrls","OrderHistoryComponent","orderService","orders","getAllOrdersForUser","UserProfileComponent","userService","user","firstName","lastName","password","email","getCurrentUser","userRoutes","path","component","children","redirectTo","pathMatch","UserRoutingModule","forChild","declarations","imports","exports","UserModule","forRoot"],"mappings":"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","file":"app-modules-user-user-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AddressService } from 'src/app/services/address.service';\nimport { Address } from 'src/app/models/model';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-address-management',\n  templateUrl: './address-management.component.html',\n  styleUrls: ['./address-management.component.css']\n})\nexport class AddressManagementComponent implements OnInit {\n\n  addresses: Address[] = [];\n  errMess: String =\"\";\n  addressForm: FormGroup;\n  @ViewChild('addressModal', { static: false }) addressModal: ModalDirective;\n\n  constructor(private addressService: AddressService,\n    private formBuilder: FormBuilder) {\n    \n   }\n\n  ngOnInit(): void {\n    this.addressService.getAllAddresses()\n      .subscribe(res => this.addresses = res,\n        err => this.errMess = err);\n    this.createAddressForm();\n    \n  }\n\n  closeAddressModal() {\n    this.addressModal.hide();\n  }\n\n  /**\n  * Open product moda.\n  */\n  openAddressModal() {\n    this.addressModal.show();\n\n  }\n\n  createAddressForm(){\n    this.addressForm = this.formBuilder.group({\n      street: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n    })\n  }\n  addAddress(){\n    if(this.addressForm.valid){\n\n      this.addressService.createNewAddress(this.addressForm.value)\n        .subscribe(res => {\n          console.log(res);\n        },\n        err => {\n          console.log(err);\n        })\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12 col-sm-6\">\n            <table class=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Street</th>\n                    <th scope=\"col\">City</th>\n                    <th scope=\"col\">Country</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let address of addresses; index as i\">\n                    <th scope=\"row\">{{i}} </th>\n                    <td>{{address.street}} </td>\n                    <td>{{address.city}} </td>\n                    <td>{{address.country}} </td>\n                  </tr>\n                </tbody>\n              </table>\n              <button class=\"btn btn-primary\" (click)=\"openAddressModal()\">Add new address</button>\n        </div>\n    </div>\n    <div class=\"row\">\n        \n    </div>\n</div>\n<div class=\"modal fade\" bsModal #addressModal=\"bs-modal\" tabindex=\"-1\" role=\"dialog\"\n(onHidden)=\"closeAddressModal()\">\n<div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n        <div class=\"modal-body\">\n            <form role=\"form\" [formGroup]=\"addressForm\" (ngSubmit)=\"addAddress()\">\n                <h3>Add New Address</h3>\n                <div class=\"form-group\">\n                    <input type=\"text\" placeholder=\"Enter Street Name\" class=\"form-control\"\n                        formControlName=\"street\">\n                </div>\n\n                <div class=\"form-group\">\n                    <input type=\"text\" placeholder=\"Enter City Name\"\n                        class=\"form-control\" formControlName=\"city\">\n                </div>\n\n                <div class=\"form-group\"><input type=\"text\" placeholder=\"Enter Country Name\" class=\"form-control\"\n                        formControlName=\"country\">\n                </div>\n\n\n                <button class=\"btn btn-sm btn-primary m-t-n-xs\" type=\"submit\" >\n                    <strong>Add New Address</strong>\n                </button>\n            </form>\n        </div>\n    </div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Order } from 'src/app/models/model';\nimport { OrderService } from 'src/app/services/order.service';\n\n@Component({\n  selector: 'app-order-history',\n  templateUrl: './order-history.component.html',\n  styleUrls: ['./order-history.component.css']\n})\nexport class OrderHistoryComponent implements OnInit {\n\n  orders: Order[]=[];\n  errMess: string = \"\";\n  constructor(private orderService: OrderService) { }\n\n  ngOnInit(): void {\n    this.orderService.getAllOrdersForUser()\n      .subscribe(res => {\n        this.orders = res;\n        console.log(res);\n      },\n        err => this.errMess = err);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12 col-sm-6\">\n            <table class=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Order Id</th>\n                    <th scope=\"col\">Issued date</th>\n                    <th scope=\"col\">Price</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let order of orders\">\n                    <td>{{order.orderId}} </td>\n                    <td>{{order.issueDate | date:'short'}} </td>\n                    <td>{{order.price}} </td>\n                  </tr>\n                </tbody>\n              </table>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/app/models/model';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  user: User = {\n    firstName:\"\",\n    lastName:\"\",\n    password:\"\",\n    email:\"\"\n  };\n  errMess: string = \"\";\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getCurrentUser()\n      .subscribe(res => this.user = res,\n        err => this.errMess = err);\n  }\n\n}\n","<div class=\"container\">\n    <h1>Edit Profile</h1>\n  \t<hr>\n\t<div class=\"row\">\n      <!-- left column -->\n      <!-- <div class=\"col-md-3\">\n        <div class=\"text-center\">\n          <img src=\"//placehold.it/100\" class=\"avatar img-circle\" alt=\"avatar\">\n          <h6>Upload a different photo...</h6>\n          \n          <input type=\"file\" class=\"form-control\">\n        </div>\n      </div> -->\n      \n      <!-- edit form column -->\n      <div class=\"col-md-9 personal-info\">\n        <div class=\"alert alert-info alert-dismissable\">\n          <a class=\"panel-close close\" data-dismiss=\"alert\">×</a> \n          <i class=\"fa fa-coffee\"></i>\n          This is an <strong>.alert</strong>. Use this to show important messages to the user.\n        </div>\n        <h3>Personal info</h3>\n        \n        <form class=\"form-horizontal\" role=\"form\">\n          <div class=\"form-group\">\n            <label class=\"col-lg-3 control-label\">First name:</label>\n            <div class=\"col-lg-8\">\n              <input class=\"form-control\" type=\"text\" [(ngModel)]=\"user.firstName\" name=\"firstname\">\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"col-lg-3 control-label\">Last name:</label>\n            <div class=\"col-lg-8\">\n              <input class=\"form-control\" type=\"text\" [(ngModel)]=\"user.lastName\" name=\"lastname\">\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"col-lg-3 control-label\">Email:</label>\n            <div class=\"col-lg-8\">\n              <input class=\"form-control\" type=\"email\" [(ngModel)]=\"user.email\" name=\"email\">\n            </div>\n          </div>\n          \n         <div class=\"form-group\">\n            <label class=\"col-md-3 control-label\">Password:</label>\n            <div class=\"col-md-8\">\n              <input class=\"form-control\" type=\"password\" [(ngModel)]=\"user.password\" name=\"password\">\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"col-md-3 control-label\">Confirm password:</label>\n            <div class=\"col-md-8\">\n              <input class=\"form-control\" type=\"password\" [(ngModel)]=\"user.password\" name=\"confirmPassword\">\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"col-md-3 control-label\"></label>\n            <div class=\"col-md-8\">\n              <input type=\"button\" class=\"btn btn-primary\" value=\"Save Changes\">\n              <span></span>\n              <input type=\"reset\" class=\"btn btn-default\" value=\"Cancel\">\n            </div>\n          </div>\n        </form>\n      </div>\n  </div>\n</div>\n<hr>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserProfileComponent } from '../../../app/components/user/user-profile/user-profile.component';\nimport { AddressManagementComponent } from '../../../app/components/user/address-management/address-management.component';\nimport { OrderHistoryComponent } from '../../../app/components/user/order-history/order-history.component';\nimport { UserLayoutComponent } from '../../../app/components/user/user-layout/user-layout.component';\n\nconst userRoutes: Routes = [\n {\n    path: '',\n    component: UserLayoutComponent,\n    children: [\n      { path: '', redirectTo: 'profile', pathMatch: 'full' },\n      { path: 'profile', component: UserProfileComponent },\n      { path: 'addressmanagement', component: AddressManagementComponent },\n      { path: 'orderhistory', component: OrderHistoryComponent }\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(userRoutes)\n  ],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserProfileComponent } from '../../../app/components/user/user-profile/user-profile.component';\nimport { AddressManagementComponent } from '../../../app/components/user/address-management/address-management.component';\nimport { OrderHistoryComponent } from '../../../app/components/user/order-history/order-history.component';\n\nimport { UserRoutingModule } from '../user-routing/user-routing.module';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [ \n    UserProfileComponent,\n    AddressManagementComponent,\n    OrderHistoryComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    ModalModule.forRoot(),\n    UserRoutingModule,\n  ]\n})\nexport class UserModule { }\n"]}