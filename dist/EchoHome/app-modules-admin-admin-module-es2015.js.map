{"version":3,"sources":["./src/app/components/admin/category/category.component.ts","./src/app/components/admin/category/category.component.html","./src/app/components/admin/product/product.component.ts","./src/app/components/admin/product/product.component.html","./src/app/modules/admin-routing/admin-routing.module.ts","./src/app/modules/admin/admin.module.ts","./src/app/services/category.service.ts"],"names":[],"mappings":"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","file":"app-modules-admin-admin-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { Category } from 'src/app/models/model';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { CategoryService } from '../../../services/category.service'\nimport { ToastrService } from 'ngx-toastr';\n\n/**\n * Modal form data form\n */\ninterface CategoryForm {\n  categoryName: string,\n  description: string,\n}\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n\n  @ViewChild('categoryModal', { static: false }) categoryModal: ModalDirective;\n  \n  public categories?: Array<Category>;\n\n  /**\n   * Modal form group\n   */\n  public readonly categoryModalGroup = this.formBuilder.group({\n      categoryName: ['', Validators.required],\n      description: ['', Validators.required],\n    });\n\n  constructor( \n    private formBuilder: FormBuilder,\n    private categoryService: CategoryService,\n    private toastrService: ToastrService) {\n\n     }\n\n  ngOnInit(): void {\n    this.getAllCategories();\n  }\n\n\n  /**\n   * Get form group value\n   */\n  get categoryFormGroupValue(): CategoryForm {\n    return this.categoryModalGroup.value;\n  }\n\n  /**\n   * Open category modal\n   */\n  openCategoryModal(){\n    this.categoryModal.show();\n  }\n\n  /**\n   * Close category modal\n   */\n  closeCategoryModal(){\n    this.categoryModalGroup.reset();\n    this.categoryModal.hide();\n  }\n\n  /**\n   * Create new category\n   */\n  createCategory() {\n\n    const args: Category ={\n      categoryName: this.categoryFormGroupValue.categoryName,\n      description: this.categoryFormGroupValue.description,\n      categoryId: 0\n    };\n\n    this.categoryService.createCategory(args).subscribe(\n      res => {\n        this.toastrService.success(`The product ${this.categoryFormGroupValue.categoryName} has been created succesfully`);\n        this.closeCategoryModal();\n        this.getAllCategories();\n       \n      },\n      \n      err => {\n        console.log(\"ERROR: CreateCategory\")\n      }\n\n    );\n\n  }\n\n  /**\n   * Get all cateogries\n   */\n  getAllCategories() {\n    this.categoryService.getAllCateogries().subscribe(\n      res => {\n        this.categories = res;\n      },\n\n      err => {\n        console.log(\"ERROR: getAllCategories\")\n      }\n    )\n\n  }\n\n}\n","<div class=\"row wrapper border-bottom white-bg page-heading\">\n    <div class=\"col-lg-10\">\n        <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n                <a [routerLink]=\"['/home']\">Home</a>\n            </li>\n            <li class=\"breadcrumb-item\">\n                <a>Category</a>\n            </li>\n        </ol>\n    </div>\n</div>\n\n<div class=\"wrapper wrapper-content\">\n    <div class=\"row\">\n        <div class=\"col-lg-8 col-md-12\">\n            <div class=\"ibox\">\n                <div class=\"ibox-title\">\n                    <h5>Categories</h5>\n                    <div class=\"ibox-tools\">\n                        <button class=\"btn btn-primary btn-sm\" (click)=\"openCategoryModal()\">Add Category</button>\n                    </div>\n                </div>\n                <div class=\"ibox-content\">\n                    <div class=\"table-responsive\">\n                        <h2>Category List</h2>\n                        <table class=\"table table-striped\">\n                            <thead>\n                                <tr>\n                                    <th>Category Id</th>\n                                    <th>Name</th>\n                                    <th>Decription</th>\n\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                <tr class=\"gradeX\" *ngFor=\"let category of categories; let i = index;\">\n                                    <td>{{ category.categoryId}}</td>\n                                    <td>{{ category.categoryName}}</td>\n                                    <td>{{ category.description}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"modal fade\" bsModal #categoryModal=\"bs-modal\" tabindex=\"-1\" role=\"dialog\"\n        (onHidden)=\"closeCategoryModal()\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-body\">\n                    <form role=\"form\" [formGroup]=\"categoryModalGroup\" (ngSubmit)=\"createCategory()\">\n                        <h3>Create New Category</h3>\n                        <div class=\"form-group\"><input type=\"text\" placeholder=\"Enter Category Name\" class=\"form-control\"\n                                formControlName=\"categoryName\">\n                        </div>\n\n                        <div class=\"form-group\"><input type=\"text\" placeholder=\"Enter Category Description\"\n                                class=\"form-control\" formControlName=\"description\">\n                        </div>\n\n                        <button class=\"btn btn-sm btn-primary m-t-n-xs\" type=\"submit\">\n                            <strong>Add New Category</strong>\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { FormBuilder, Validators, FormGroup, Form } from '@angular/forms';\nimport { ProductService } from '../../../services/product.service'\nimport { CategoryService } from '../../../services/category.service'\nimport { Product, Category } from 'src/app/models/model';\nimport { ToastrService } from 'ngx-toastr';\n\n\ninterface ProductForm {\n  name: string;\n  description: string;\n  price: number;\n  cateogryId: number;\n}\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  @ViewChild('productModal', { static: false }) productModal: ModalDirective;\n\n  public products?: Array<Product>;\n  public categories?: Array<Category>;\n\n  constructor(\n    private productService: ProductService,\n    private formBuilder: FormBuilder,\n    private toasterService: ToastrService,\n    private categoryService: CategoryService) {\n\n  }\n\n  ngOnInit(): void {\n    this.getAllProducts();\n    this.getAllCategories();\n  }\n  /**\n   * \n   */\n\n\n  /**\n   * Get all products\n   */\n  getAllProducts() {\n    this.productService.getAllProducts().subscribe(\n      res => {\n        this.products = res;\n      },\n      err => {\n        console.error(\"Error: getAllProducts\", err);\n      }\n    )\n  }\n\n  public readonly productGroupModel: FormGroup = this.formBuilder.group({\n    name: ['', Validators.required],\n    description: ['', Validators.required],\n    price: ['', Validators.required],\n    categoryId: ['', Validators.required],\n  });\n\n  get productFormGroupValue(): ProductForm {\n    return this.productGroupModel.value;\n  }\n\n  /**\n   * \n   */\n  closeProductModal() {\n    this.productModal.hide();\n  }\n\n  /**\n  * Open product moda.\n  */\n  openProductModal() {\n    this.productModal.show();\n  }\n  /**\n   * Create new product\n   */\n  createProduct() {\n    const args: Product = {\n      name: this.productFormGroupValue.name,\n      price: Number(this.productFormGroupValue.price),\n      description: this.productFormGroupValue.description,\n      category: this.getSelectedCategory(),\n      productId: 0\n    };\n\n\n    this.productService.createNewProduct(args).subscribe(\n      res => {\n        if (res) {\n          this.toasterService.success(`Product has been creates successfully`);\n\n          this.productModal.hide();\n          this.productGroupModel.reset();\n\n          this.getAllProducts();\n        }\n      },\n      err => {\n        console.error(\"ERROR: createProduct\", err);\n      }\n    )\n\n  }\n\n  /**\n   * Get all cateogries\n   */\n  getAllCategories() {\n    this.categoryService.getAllCateogries().subscribe(\n      res => {\n        this.categories = res;\n      },\n\n      err => {\n        console.log(\"ERROR: getAllCategories\")\n      }\n    )\n  }\n\n  /**\n   * Get Category By Id\n   */\n  getSelectedCategory() {\n    console.log(this.productGroupModel.value.categoryId);\n    for (let category of this.categories) {\n      if (category.categoryId == Number(this.productGroupModel.value.categoryId)) {\n        return category;\n      }\n    }\n\n  }\n\n}\n","<div class=\"row wrapper border-bottom white-bg page-heading\">\n    <div class=\"col-lg-10\">\n        <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n                <a [routerLink]=\"['/home']\">Home</a>\n            </li>\n            <li class=\"breadcrumb-item\">\n                <a>Product</a>\n            </li>\n        </ol>\n    </div>\n</div>\n\n<div class=\"wrapper wrapper-content\">\n    <div class=\"row\">\n        <div class=\"col-lg-12 col-md-12\">\n            <div class=\"ibox\">\n                <div class=\"ibox-title\">\n                    <h5>Products</h5>\n                    <div class=\"ibox-tools\">\n                        <button class=\"btn btn-primary btn-sm\" (click)=\"openProductModal()\">Add Product</button>\n                    </div>\n                </div>\n                <div class=\"ibox-content\">\n                    <div class=\"table-responsive\">\n                        <h2>Product List</h2>\n                        <table class=\"table table-striped\">\n                            <thead>\n                                <tr>\n                                    <th>Product Id</th>\n                                    <th>Name</th>\n                                    <th>Decription</th>\n                                    <th>Price</th>\n                                    <th>Category</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                <tr class=\"gradeX\" *ngFor=\"let product of products; let i = index;\">\n                                    <td>{{ product.productId }}</td>\n                                    <td>{{ product.name }}</td>\n                                    <td>{{ product.price | currency }}</td>\n                                    <td>{{ product.description }}</td>\n                                    <td>{{ product.category.categoryName }}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"modal fade\" bsModal #productModal=\"bs-modal\" tabindex=\"-1\" role=\"dialog\"\n        (onHidden)=\"closeProductModal()\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-body\">\n                    <form role=\"form\" [formGroup]=\"productGroupModel\" (ngSubmit)=\"createProduct()\">\n                        <h3>Create New Product</h3>\n                        <div class=\"form-group\"><input type=\"text\" placeholder=\"Enter Product Name\" class=\"form-control\"\n                                formControlName=\"name\">\n                        </div>\n\n                        <div class=\"form-group\"><input type=\"text\" placeholder=\"Enter Product Description\"\n                                class=\"form-control\" formControlName=\"description\">\n                        </div>\n\n                        <div class=\"form-group\"><input type=\"text\" placeholder=\"Enter Price\" class=\"form-control\"\n                                formControlName=\"price\">\n                        </div>\n\n                        <label class=\"col-sm-4 col-form-label\">Select Category</label>\n                        <select class=\"form-control\" formControlName=\"categoryId\">\n                            <option *ngFor=\"let category of categories\" [value]=\"category.categoryId\">\n                                {{category.categoryName}}</option>\n                        </select>\n\n                        <button class=\"btn btn-sm btn-primary m-t-n-xs\" type=\"submit\">\n                            <strong>Add New Product</strong>\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductComponent } from '../../../app/components/admin/product/product.component';\nimport { CategoryComponent } from '../../../app/components/admin/category/category.component';\n\nconst adminRoutes: Routes = [\n  { path: 'product', component: ProductComponent },\n  { path: 'category', component: CategoryComponent },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(adminRoutes)\n  ],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminRoutingModule } from '../admin-routing/admin-routing.module'\nimport { ProductComponent } from '../../components/admin/product/product.component';\nimport { CategoryComponent } from '../../components/admin/category/category.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    ProductComponent,\n    CategoryComponent\n  ],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    ModalModule.forRoot(),\n    AdminRoutingModule\n  ],\n  \n})\nexport class AdminModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Category, Product } from '../models/model'\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  private readonly BASEURL: string = \"https://localhost:5001/Category\"\n  constructor(\n    private http: HttpClient) {\n\n  }\n\n  /**\n * Crate Category\n */\n  createCategory(category: Category): Observable<any> {\n    return this.http.post(this.BASEURL + '/CreateCategory', category);\n  }\n\n  /**\n   * Get all Category\n   */\n  getAllCateogries(): Observable<Array<Category>> {\n    return this.http.get<Array<Category>>(this.BASEURL + '/GetAllCategroies');\n  }\n}\n"],"sourceRoot":"webpack:///"}